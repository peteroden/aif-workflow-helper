# Configuration file for MegaLinter
#
# See all available variables at https://megalinter.io/latest/config-file/ and in
# linters documentation

---
# ----------------------------------------
# CORE CONFIGURATION
# ----------------------------------------

# If you use ENABLE variable, all other languages/formats/tooling-formats will
# be disabled by default
# ENABLE:

# If you use ENABLE_LINTERS variable, all other linters will be disabled by
# default
ENABLE_LINTERS:
  # Shell scripts
  - BASH_EXEC
  - BASH_SHELLCHECK

  # Infrastructure as Code
  - TERRAFORM_TERRAFORM_FMT
  - TERRAFORM_TFLINT
  - BICEP_BICEP_LINTER
  - YAML_YAMLLINT

  # Documentation
  - MARKDOWN_MARKDOWNLINT
  - MARKDOWN_MARKDOWN_TABLE_FORMATTER


  # Security scanning
  - REPOSITORY_GITLEAKS
  - REPOSITORY_GRYPE
  - REPOSITORY_SECRETLINT

  # Quality
  - SPELL_CSPELL
  - YAML_YAMLLINT

# DISABLE:
#  - COPYPASTE # Comment to enable checks of excessive copy-pastes
#  - REPOSITORY_GIT_DIFF
#  - SPELL_LYCHEE
#  - MARKDOWN_MARKDOWN_LINK_CHECK
#  - JSON
#  - TERRAFORM_TERRASCAN

# ----------------------------------------
# BEHAVIOR CONFIGURATION
# ----------------------------------------

# Fixes application: none, all, or specific linters
APPLY_FIXES: none

# Default branch name for comparison
DEFAULT_BRANCH: main

# Validate entire codebase, not just changes
VALIDATE_ALL_CODEBASE: false

# Log level: DEBUG, INFO, WARNING or ERROR
LOG_LEVEL: INFO

# Print all scanned files in logs
PRINT_ALL_FILES: true

# ----------------------------------------
# REPORTER CONFIGURATION
# ----------------------------------------

# Show elapsed time per linter
SHOW_ELAPSED_TIME: true

# File I/O reporter
FILEIO_REPORTER: false

# Clear the report folder before generating new reports
CLEAR_REPORT_FOLDER: true

# Generate JSON report
JSON_REPORTER: true

# Enable Azure DevOps PR comment reporter
AZURE_COMMENT_REPORTER: true

# Uncomment if you want MegaLinter to detect errors but not block CI to pass
# DISABLE_ERRORS: true

# ----------------------------------------
# LINTER SPECIFIC CONFIGURATION
# ----------------------------------------

# Markdown Table Formatter configuration - treat warnings as errors
MARKDOWN_MARKDOWN_TABLE_FORMATTER_DISABLE_ERRORS: false
MARKDOWN_MARKDOWN_TABLE_FORMATTER_FILTER_REGEX_EXCLUDE: '(\.copilot-tracking/.*)'

# Markdown Linter configuration - treat warnings as errors
MARKDOWN_MARKDOWNLINT_DISABLE_ERRORS: false
MARKDOWN_MARKDOWNLINT_FILTER_REGEX_EXCLUDE: '(\.copilot-tracking/.*|\.github/prompts/.*|\.github/instructions/.*|\.github/chatmodes/.*|\.github/copilot-instructions.md)'

# Terraform Format configuration
TERRAFORM_TERRAFORM_FMT_DISABLE_ERRORS: false
TERRAFORM_TERRAFORM_FMT_ARGUMENTS: "-check -diff"

# TFLint configuration
TERRAFORM_TFLINT_UNSECURED_ENV_VARIABLES:
  - GITHUB_TOKEN

# YAML Lint configuration
YAML_YAMLLINT_FILTER_REGEX_EXCLUDE: '(\.github/ISSUE_TEMPLATE)'

# Spell checker configuration
SPELL_CSPELL_CONFIG_FILE: .cspell.json
SPELL_CSPELL_FILE_EXTENSIONS: [".md"]

# PowerShell configuration
POWERSHELL_POWERSHELL_CONFIG_FILE: PSScriptAnalyzerSettings.psd1

# Terrascan configuration (currently disabled)
# TERRAFORM_TERRASCAN_CONFIG_FILE: .terrascan.toml
# TERRAFORM_TERRASCAN_DISABLE_ERRORS: true
